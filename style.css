:root {
  --clr-accent-500: hsl(12, 50%, 40%);
  --clr-accent-400: hsl(12, 88%, 59%);
  --clr-accent-300: hsl(12, 88%, 75%);
  --clr-accent-100: hsl(13, 100%, 96%);

  --clr-primary-400: hsl(228, 39%, 23%);

  /* --clr-neutral-100: hsl(232, 12%, 13%); */
  --clr-neutral-100: hsl(0, 0%, 63%);
  --clr-neutral-900: hsl(232, 12%, 13%);

  --ff-primary: 'Be Vietnam Pro', sans-serif;

  --ff-body: var(--ff-primary);
  --ff-heading: var(--ff-primary);

  --fw-regular: 400;
  --fw-semi-bold: 500;
  --fw-bold: 700;

  --fs-300: .8125rem;
  --fs-400: .875rem ;
  --fs-500: .9375rem; 
  /* .9375rem = 15px */
  --fs-600: 1rem;
  --fs-700: 1.875rem;
  --fs-800: 2.5rem;
  --fs-900: 3.5rem;

  --fs-body : var(--fs-400);
  --fs-primary-heading: var(--fs-800);
  --fs-secondary-heading: var(--fs-700);
  --fs-nav: var(--fs-500);
  --fs-button: var(--fs-300);

  --size-100: 0.25rem;
  --size-200: 0.5rem;
  --size-300: 0.75rem;
  --size-400: 1rem;
  --size-500: 1.25rem;
  --size-600: 2rem;
  --size-700: 3rem;
  --size-800: 4rem;
  --size-900: 5rem;

  --transition-button: transform 0.3s linear;
}

@media screen and (max-width: 50em) {
  /* - 50em = 800px
  - 3.5rem = 56px */
  :root {
    --fs-700: 3.5rem;
    --fs-600: 2.5rem;

    --fs-body: var(--fs-500);
    --fs-primary-heading: var(--fs-900);
    --fs-secondary-heading: var(--fs-800); 
    --fs-nav: var(--fs-300);
  }
}

/* Box sizing rules */
*,
*::before,
*::after {
	box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
  /* Kevin says that the reason for these resets is to force people
  to use classes and semantics correctly , so instead of using an h3
  because your element just visually needs to look as an h3, you will
  use css styling instead .  */
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
	list-style: none;
}

/* Set core root defaults */
html:focus-within {
	scroll-behavior: smooth;
}

html,
body {
  height: 100%;
}

/* Set core body defaults */
body {
	
	text-rendering: optimizeSpeed;
	line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
	text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
	max-width: 100%;
	display: block;
}



/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
	html:focus-within {
		scroll-behavior: auto;
	}

	*,
	*::before,
	*::after {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}



.padding-block-900 {
  padding-block: var(--size-900);
}
.padding-block-700 {
  padding-block: var(--size-700);
}

/* general styling */
body {
  font-size: var(--fs-body);
  font-family: var(--ff-body);
  color: var(--clr-primary-400);
}
p:not([class]) {
  /* We used the above selector so the upcoming styles are applied
  to any p that doesn't have a class , which means that we don't 
  need a specific styling on that p .  */
  opacity: 0.7;
  max-width: 35ch;
  /* The ch unit -from what I read - calculates the width
  of the character (zero) in the font family used . */
}
p[data-width='wide'] {
  max-width: 42ch;
}
/* button */
.btn {
  border-radius: 100vmax;
  /* The 100vmax gets us the consistent 
  shape for the button */
  padding: 1.25em 2.5em;
  line-height: 1;
  /* We added the line height
  property and increased the vertical padding from
  1em to 1.25em so that the text becomes
  centered  */
  border: 0;
  font-weight: var(--fw-bold);
  font-size: var(--fs-button);
  cursor: pointer;
  color: var(--clr-accent-100);
  background-color: var(--clr-accent-400);
  box-shadow: 0 1.125em 1em -1em var(--clr-accent-500);
  /* offset-x | offset-y | blur-radius | spread-radius | color */
}
.btn:hover {
  background-color: var(--clr-accent-300);
}
.btn[data-type='inverted'] {
  background-color: var(--clr-accent-100);
  color: var(--clr-accent-400);
}
.btn[data-type='inverted']:hover {
  color: var(--clr-accent-300);
}

/* primary navigation styling */
.primary-header .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.primary-navigation ul.nav-list {
  display: flex;
  gap: clamp(var(--size-400), 5vw, var(--size-700));
  font-weight: var(--fw-semi-bold);
}


.primary-navigation li a {
  color: var(--clr-primary-400);
  text-decoration: none;
}
.primary-navigation li a:hover {
  color: var(--clr-neutral-100);
}
/* navigation */

.mobile-nav-toggle-js {
  background-color: transparent;
  border: none;
  cursor: pointer;
  position: relative;
  width: 20px;
  height: 20px;
}
.mobile-nav-toggle-js:focus {
  outline: none;
}
.mobile-nav-toggle-js span {
    position: absolute;
    left: 0;
    display: block;
    width: 100%;
    height: 4px;
    background-color: var(--clr-primary-400);
    border-radius: 2rem;
    margin-top: 0.2rem;
    transition: var(--transition-button);
}
.mobile-nav-toggle-js span:first-child {
  top: 0;
}
.mobile-nav-toggle-js span:nth-child(2) {
  top: 8px;
}
.mobile-nav-toggle-js span:nth-child(3) {
  top: 16px;
}


.mobile-nav-toggle-js.close-btn span:nth-child(2) {
  visibility: hidden;
}
.mobile-nav-toggle-js.close-btn span:nth-child(1) {
  top: 8px;
  /* the 1st and 3rd children will be placed in the place of the second child */
  transform: rotate(45deg);
}
.mobile-nav-toggle-js.close-btn span:nth-child(3) {
  top: 8px;
  transform: rotate(-45deg);
}
.primary-header .mobile-nav-toggle-js {
  display: none;
}

/* cta */
.cta {
  position: relative;
  isolation: isolate;
  text-align: center;
}
.cta::before {
  content: '';
  position: absolute;
  inset: 0;
  z-index: -1;
  background-image: url('images/bg-tablet-pattern.svg'),
  url('images/bg-tablet-pattern.svg');
  background-position: -15rem -5rem, 75rem -45rem;;
  background-repeat: no-repeat;
  opacity: 0.1;

}
@media screen and (min-width: 50em) {
  .cta {
    text-align: left;
  }
}

@media screen and (max-width: 50em) {
  
  .primary-header .mobile-nav-toggle-js {
    display: block;
  }
  .primary-header button.btn {
    display: none;
  }
  .primary-header[data-overlay]::before {
    content: '';
    position: fixed;
    inset: 0;
    /* width: 100vw;
    height: 100vh; */
    /* This will make the dropshadow fill the entire
    screen */
    background-image: linear-gradient(rgba(0, 0, 0 , 0), rgba(0, 0, 0 , 0.8));
  }

  .mobile-nav-toggle-js {
    margin-top: -0.5rem;
    position: absolute;
    right: 2rem;
}
  
  .primary-navigation ul.nav-list {
    width: fit-content;
    max-width: 80vw;
    background-color: white;
    box-shadow: 1em 1em 15px #9d9d9d;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    /* margin-top: 15px; */
    position: absolute;
    top: 6rem;
    left: 50%;
    transform: translateX(-50%);
    width: 80vw;
    justify-content: center;
    align-items: center;
    padding: 1rem;
    border: 1px solid black;
    border-radius: 1rem;
    color: var(--clr-primary-400);
    font-weight: var(--fw-bold);
    display: none;
  }
  .primary-navigation ul.nav-list.show {
    display: flex;
  }
  
}


/* utility classes */
.text-primary-400 {
  color: var(--clr-primary-400);
}
.text-accent-400 {
  color: var(--clr-accent-400);
}
.text-accent-100 {
  color: var(--clr-accent-100);
}
.text-neutral-100 {
  color: var(--clr-neutral-100);
}
.text-neutral-900 {
  color: var(--clr-neutral-900);
}

.bg-primary-400 {
  background-color: var(--clr-primary-400);
}
.bg-accent-400 {
  background-color: var(--clr-accent-400);
}
.bg-accent-100 {
  background-color: var(--clr-accent-100);
}
.bg-neutral-100 {
  background-color: var(--clr-neutral-100);
}
.bg-neutral-900 {
  background-color: var(--clr-neutral-900);
}


.fw-bold {
  font-weight: var(--fw-bold);
}
.fw-semi-bold {
  font-weight: var(--fw-semi-bold);
}
.fw-regular {
  font-weight: var(--fw-regular);
}
.fs-primary-heading {
  font-size: var(--fs-primary-heading);
  line-height: 1.1;
}
.fs-secondary-heading {
  font-size: var(--fs-secondary-heading);
  line-height: 1.1;
}

.fs-300 {font-size: var(--fs-300);}
.fs-400 {font-size: var(--fs-400);}
.fs-500 {font-size: var(--fs-400);}

/* classes naming convention : Here, classes for font sizes that have
numbers are the ones that won't change , will fs classes with names
are the ones which will change on media query .  */

.container {
  --max-width: 1110px;
  --horizontal-padding: 1rem;

  width: min(var(--max-width), 100% - (var(--horizontal-padding) * 2));
  /* The aim of the above code is to make anything 
  wrapped in a container to not touch the edges of 
  the screen on smaller devices .  */
  margin-inline: auto;
}
.flow > * + * {
  /* The above selection is called the owl selector
  and is pretty amazing . It applies the styles to
  adjacent siblings in a container if each sibling
  has an adjacent sibling before it (in other words, it
  will style all the elements except the first child )
  
  This selector is mostly used to apply spacing . */

  margin-top: var(--flow-spacer, 3em);
  /* We didn't define a flow-spacer variable here, but
  we can define it in a div selector if we needed to 
  use it .  */
}
.even-columns {
  display: grid;
  gap: 1rem;
}
@media (min-width: 50em) {
  /* 50em === 800px */
  .even-columns {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
  }
}

.justify-self-end-md {
  justify-self: end;
  /* margin-left: auto; */
  /* Because our container is a grid, so we had the ability
  to make our element go to the end using a css property
  and with not playing with margins . We could also use 
  the above property to modify the left margin and it will
  give the same effect .  */
}
@media (max-width: 600px) {
  .justify-self-end-md {
    justify-self: center;
  }
}
.vertical-align-center {
  align-items: center;
  /* The use of this class is to align the button a little
  bit with the text in the cta container . */
}

.nav-list {
  font-size: var(--fs-nav);
}

